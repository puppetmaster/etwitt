/* ETWITT PHONE THEME
 *
 * phone.edc
 *
 * Copyright (C) 20011-2012 Philippe Caseiro, Nicolas Aguirre
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library;
 * if not, see <http://www.gnu.org/licenses/>.
 */

images{
   image: "bg.jpg" COMP;
   image: "back_item_tweet.png" COMP;
   image: "back_item_header.png" COMP;
   image: "back_rounded.png" COMP;

   image: "bt_sm_base2.png" COMP;
   image: "bt_sm_hilight.png" COMP;
   image: "bt_sm_shine.png" COMP;
}

collections {

/*
 *  Redefine the elm_genlist theme
 */
   group {	name: "elm/genlist/item/twitt/default";
      alias: "elm/genlist/item_odd/twitt/default";
      alias: "elm/genlist/item_compress/twitt/default";
      alias: "elm/genlist/item_compress_odd/twitt/default";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "treesize" "20";
      data.item: "labels" "elm.text elm.date elm.name";
      data.item: "contents" "elm.swallow.icon";

      styles {
         style { name: "twitt_textblock_style";
            base: "font=Sans font_size=12 color=#000 wrap=mixed text_class=entry";
            tag:  "br" "\n";
            tag:  "ps" "ps";
            tag:  "tab" "\t";
            tag:  "em" "+ font_style=Oblique";
            tag:  "b" "+ font_weight=Bold";
            tag:  "link" "+ color=#800 underline=on underline_color=#8008";
            tag:  "hilight" "+ font_weight=Bold";
         }

         style { name: "twitt_name_textblock_style";
            base: "font=Sans font_size=11 color=#7f7f7f font_weight=Bold wrap=mixed text_class=entry";
         }
      }

      parts {
         part {	name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 {
                  relative: 0 0;
                  offset: 9 7;
               }
               rel2 {
                  relative: 0 0;
                  offset: 46 45;
               }
            }
         }

         part {	name: "item_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 54;
               fixed: 0 0;
               image {
                  normal: "back_item_tweet.png";
                  border: 54 5 50 3;
               }
            }
         }

         part { name: "elm.name";
            type: TEXTBLOCK;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.offset: 55 7;
               rel2 {
                  relative: 1 0;
                  offset: -1 16;
               }
               text {   text: "Unnamed";
                  style: "twitt_name_textblock_style";
                  min: 1 1;
                  elipsis: 0;
                  max: 0.5 1;
                  align: 0.0 0.5;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }

         part { name: "elm.date";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 {
                       relative: 0 0;
                       offset: 0 7;
               }
               rel2 {
                       relative: 1 0;
                       offset: -1 16;
               }
               color: 149 149 149 255;
               color3: 0 0 0 0;
               text {
                  text: "No date";
                  font: "Sans:style=Oblique";
                  size: 8;
                  min: 1 1;
                  align: 1.0 0.5;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }

         part {	name: "elm.text";
            type: TEXTBLOCK;
            //effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
                  to: "item_bg";
                  relative: 0.0 0.0;
                  offset: 55 20;
               }
               rel2 {
                  to: "item_bg";
                  offset: -10 -10;
               }
               color: 0 0 0 255;
               color3: 0 0 0 0;
               text {
                  style: "twitt_textblock_style";
                  min: 0 1;
                  align: 0.0 0.0;
                  text: "The quick brown fox jumped over the lazy dog? Yes, the quick brown fox did indeed jump over the lazy dog.";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 0 0 255;
               text.style: "twitt_textblock_style";
            }
         }

      }
   }

   group {      name: "elm/genlist/item/twitt_header/default";
      alias: "elm/genlist/item_odd/twitt_header/default";
      alias: "elm/genlist/item_compress/twitt_header/default";
      alias: "elm/genlist/item_compress_odd/twitt_header/default";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";

      styles {
         style { name: "twitt_title_textblock_style";
            base: "font=Sans font_size=14 color=#525252 font_weight=Bold wrap=mixed text_class=entry";
         }
      }

      parts {

         part { name: "item_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 20 29;
               fixed: 0 0;
               image {
                  normal: "back_item_header.png";
                  border: 5 5 13 13;
               }
            }
         }

         part { name: "elm.text";
            type: TEXTBLOCK;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.offset: 16 0;
               text {   text: "Timeline";
                  style: "twitt_title_textblock_style";
                  min: 1 1;
                  elipsis: 0;
                  align: 0.0 0.5;
               }
            }
         }
      }
   }

   /*
   	*  Configuration interface
   	*
   	*/

    group {
        name: "etwitt/config";
        parts {
            part {
                type: RECT;
                name: "label_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "label/name";
                    rel2.to: "label/name";
                    color: 255 255 255 0;
                }
            }
            part {
                type: RECT;
                name: "name_entry_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "entry/name";
                    rel2.to: "entry/name";
                    color: 255 255 255 255;
                }
            }
            part {
                type: RECT;
                name: "passwd_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "label/password";
                    rel2.to: "label/password";
                    color: 255 255 255 0;
                }
            }
            part {
                type: RECT;
                name: "passwd_entry_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "entry/password";
                    rel2.to: "entry/password";
                    color: 255 255 255 255;
                }
            }
            part {
                type: RECT;
                name: "realname_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "label/realname";
                    rel2.to: "label/realname";
                    color: 255 255 255 0;
                }
            }
            part {
                type: RECT;
                name: "rename_entry_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "entry/realname";
                    rel2.to: "entry/realname";
                    color: 255 255 255 255;
                }
            }
            part {
                type: RECT;
                name: "avatarselector_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "avatarselector";
                    rel2.to: "avatarselector";
                    color: 0 0 0 25;
                }
            }
            part {
                type: RECT;
                name: "actionbar_bg";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "actionbar";
                    rel2.to: "actionbar";
                    color: 255 255 255 25;
                }
            }
            part {
                type: SWALLOW;
                name: "label/name";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0.55 0.05;
                    rel2.relative: 0.85 0.10;
                }
            }
            part {
                type: SWALLOW;
                name: "entry/name";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0 1;
                    rel1.to: "label/name";
                    rel2.relative: 0.95 0.20;
                }
            }
            part {
                type: SWALLOW;
                name: "label/password";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0 1;
                    rel1.offset: 0 5;
                    rel1.to: "entry/name";
                    rel2.relative: 0.85 0.25;
                }
            }
            part {
                type: SWALLOW;
                name: "entry/password";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0 1;
                    rel1.to: "label/password";
                    rel2.relative: 0.95 0.35;
                }
            }
            part {
                type: SWALLOW;
                name: "label/realname";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0 1;
                    rel1.offset: 0 5;
                    rel1.to: "entry/password";
                    rel2.relative: 0.85 0.40;
                }
            }
            part {
                type: SWALLOW;
                name: "entry/realname";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0 1;
                    rel1.to: "label/realname";
                    rel2.relative: 0.95 0.50;
                }
            }
            part {
                type:SWALLOW;
                name: "avatarselector";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0.10 0.10;
                    rel2.relative: 0.5 0.5;
                }
            }

            part {
                type: SWALLOW;
                name: "actionbar";
                description {
                    state: "default" 0.0;
                    align: 0.5 1.0;
                    rel1.relative: 0 1;
                    rel2.relative: 1 1;
                    fixed: 1 1;
                }
            }
        }

    }


   group {
      name: "elm/layout/roll";
      min: 32 32;
      parts {
         part {
            name: "background";
            mouse_events: 0;
            type: RECT; 
            description {
               state: "default" 0.0;
               color: 45 45 45 255;
//                image.normal: "bg.jpg";
//                fill.size.relative: 0 0;
//                fill.size.offset: 400 300;
            };
         }
         part {
            type: RECT;
            name: "menu_bg";
            mouse_events: 0;

            description {
               state: "default" 0.0;
               rel1.to: "toolbar";
               rel2.to: "toolbar";
               color: 0 0 0 25;
            }

         }
         part {
            type: RECT;
            name: "roll_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "roll";
               rel2.to: "roll";
               color: 0 0 0 50;
            }
         }
         part {
            type: RECT;
            name: "entry_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "entry";
               rel2.to: "entry";
               color: 0 0 0 50;
            }
         }

         part {
            type: SWALLOW;
            name: "toolbar";
            description {
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               align: 0.5 0.0;
               fixed: 1 1;

            }
         }
         part {
            type: SWALLOW;
            name: "roll";
            description {
               state: "default" 0.0;
               rel1.relative: 0 1;
               rel1.to: "toolbar";
               rel2.relative: 1 0;
               rel2.to: "entry";
               fixed: 1 1;
            }
            description {
                state: "hide" 0.0;
                inherit: "default" 0.0;
                visible: 0;
            }

         }
         part {
            type: SWALLOW;
            name: "entry";
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               rel1.relative: 0 1;
               rel2.relative: 1 1;
               fixed: 1 1;
            }
            description {
                state: "hide" 0.0;
                inherit: "default" 0.0;
                visible: 0;
            }
         }

         part {
             type: GROUP;
             name: "config";
             repeat_events: 1;
             source: "etwitt/config";
             description {
                 visible: 0;
                 state: "default" 0.0;
                 rel1.relative: 0 1;
                 rel1.to: "toolbar";
                 rel2.relative: 1 1;
                 fixed: 1 1;
             }
             description {
                 state: "visible" 0.0;
                 inherit: "default" 0.0;
                 visible: 1;
             }
         }

      }
      programs {
          program {
              source: "code";
              signal: "SHOW_CONFIG";
              action: STATE_SET "hide" 0.0;
              target: "roll";
              target: "entry";
          }
          program {
              source: "code";
              signal: "HIDE_CONFIG";
              action: STATE_SET "default" 0.0;
              target: "roll";
              target: "entry";
          }
          program {
              source: "code";
              signal: "SHOW_CONFIG";
              action: STATE_SET "visible" 0.0;
              target: "config";
          }
          program {
              source: "code";
              signal: "HIDE_CONFIG";
              action: STATE_SET "default" 0.0;
              target: "config";
          }
      }
   }


   group { name: "elm/genlist/base/etwitt";

   data {
      item: "focus_highlight" "on";
   }

   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   parts {
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 11 14;
            rel2.offset: -14 -17;
         }
      }
      part { name: "bg";
         description { state: "default" 0.0;
            image.normal: "back_rounded.png";
            image.border: 24 24 25 25;
         }
      }
      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 10 17;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset:   0 2;
               to_y:     "elm.swallow.content";
               to_x:     "elm.swallow.content";
            }
            rel2 {
               relative: 1.0 0.0;
               offset:   -1 -1;
               to_y:     "sb_hbar";
               to_x:     "elm.swallow.content";
            }
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 10 17;
            max: 10 99999;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
               middle: SOLID;
            }
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 10;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   2 0;
               to_x:     "elm.swallow.content";
               to_y:     "elm.swallow.content";
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -1;
               to_x:     "sb_vbar";
               to_y:     "elm.swallow.content";
            }
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 10;
            max: 99999 10;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 4 4 4 4;
               middle: SOLID;
            }
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 4 4 4 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_shine.png";
               border: 4 4 4 0;
            }
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "clipper";
            rel2.to: "clipper";
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 128 128 128 128;
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }

      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(1.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
      
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
      }
   }
}


}
